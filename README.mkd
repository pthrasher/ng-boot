Thrash's ng-boot
================


A super-simple, very minimalist boilerplate for playing around with angular.


Getting Started
---------------


```
git clone https://github.com/pthrasher/ng-boot.git
cd ng-boot
npm i -g grunt-cli
npm i
grunt watch
open http://localhost:8080/
```

### "Bash and Friends" Shell Function

```sh
# A simple function to clone pthrasher's ng-boot
# as a new playground for you to mess around with
# angular.
function ngboot {
    if [ -z "$1" ]; then
        echo "Clone boilerplate, and cd into dir.";
        echo "usage: ngboot <project-name>";
    else
        git clone git@github.com:pthrasher/ng-boot.git $1;
        cd $1;
        sed -i \._ngboot 's/TITLETITLETITLE/'$1'/' index.html;
        rm index.html._ngboot;
        npm i;
    fi
}
```


### Fish Shell Function

```fish
function ngboot -d "Clone an angular playground and name it to your liking."
    if [ -z "$argv" ]
        echo "Clone boilerplate, and cd into dir."
        echo "usage: ngboot <project-name>"
    else
        git clone git@github.com:pthrasher/ng-boot.git $argv
        cd $argv
        sed -i \._ngboot 's/TITLETITLETITLE/'$argv'/' index.html
        rm index.html._ngboot
        npm i
    end
end
```


What's included?
----------------

### Grunt Workflow


* Simple dev-server (grunt-contrib-connect)
* File watching
* Less compilation
* CoffeeScript compilation


### Third Party Libs


* **jQuery 2.0.3**
* **Underscore 1.5.2**
* **Angular 1.2.5**
* **jQueryUI 1.10.3** (off by default)
* **jQueryUI Bootstrap Theme 0.5** (off by default)
* **Twitter Bootstrap 2.3.2** (off by default)
* **Twitter Bootstrap 3.0.0** (off by default)


*off by default simply means that it is commented out in the html -- very
simple to add back in if you'd like to. ;-)*


Why?
----


Because I didn't like the other ones out there. Really, this is a local
alternative to jsfiddle. It's often very hard to debug jsfiddle, and you can't
do separate partials as html files in jsfiddle.


What about testing?
-------------------

I'd like to see some super simple spec file stuff in here. I'm totally
interested in pull requests. ;-)

I didn't initially put this in, because when I'm playing around
with new ideas, I usually do not write tests.

I'm not opposed to having karma-runner added in here, so long as it doesn't
hinder my original goal which is for this to remain as minimal, and
friction-less as possible.

